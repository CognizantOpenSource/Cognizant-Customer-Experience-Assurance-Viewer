#!/usr/bin/groovy 
pipeline{
	agent any
	stages{
		stage('test-test-unit-department11'){
			parallel{
				stage('test-test-unit-department'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/org-microservices-app.git'
							   dir('department-service'){
							   sh 'mvn -Dtest=DepartmentTest test'
							}
						}
					}
				}
				stage('test-test-unit-employee'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/org-microservices-app.git'
							dir('employee-service'){
							sh 'mvn -Dtest=EmployeeTest test'
							}
						}
					}
				}
				stage('test-test-unit-organization'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/org-microservices-app.git'
							dir('organization-service'){
							sh 'mvn -Dtest=OrganizationTest test'
							}
						}
					}
				}
			}
		}
		stage('test-Pact-Provider-Test'){
			agent{
				docker{
					args '-v $HOME/.m2:/root/.m2 -v $HOME/pacts:/var/jenkins_home/workspace/ms-contract-pact/organization-service/target/pacts'
					image 'maven:3-alpine'
				}
			}
			steps{
				script{
					git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/org-microservices-app.git'
					dir('organization-service'){
					     sh 'chmod +x start-pact-all.sh'
					     sh './start-pact-all.sh'
					     sleep(time:8,unit:"SECONDS")
					     sh 'mvn test -Dspring.profiles.active=test'
					     sh 'mvn pact:publish'
					     junit healthScaleFactor: 1.1,testResults: 'target/surefire-reports/*.xml'
					     sh 'chmod +x stop-pact-all.sh'
					     sh './stop-pact-all.sh'
					}
				}
			}
		}
		stage('test-pact-consumer-employee11'){
			parallel{
				stage('test-pact-consumer-employee'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2 -v $HOME/pacts:/var/jenkins_home/workspace/ms-contract-pact/organization-service/target/pacts'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/org-microservices-app.git'
							dir('employee-service'){
							        sh 'mvn test'
							        junit healthScaleFactor: 1.1,testResults: 'target/surefire-reports/*.xml'
							}                        
						}
					}
				}
				stage('test-pact-consumer-department'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/org-microservices-app.git'
							dir('department-service'){
							     sh 'chmod +x start-pact-all.sh'
							     sh './start-pact-all.sh'
							     sleep(time:15,unit:"SECONDS")
							     sh 'mvn test -Dspring.profiles.active=test'
							     junit healthScaleFactor: 1.1,testResults: 'target/surefire-reports/*.xml'
							     sh 'chmod +x stop-pact-all.sh'
							     sh './stop-pact-all.sh'
							}
						}
					}
				}
			}
		}
		stage('test-wiremock'){
			steps{
				script{
					git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/employee-mock-service.git'
					dir('standalone'){
					  sh 'chmod +x start.sh'
					  sh './start.sh'
					}
				}
			}
		}
		stage('test-microservice-selenium-kube111'){
			parallel{
				stage('test-component-department'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/serenity-rest-microservices-test.git'   
							sh 'mvn verify "-Dcucumber.options=--tags @department" -Dapp.base.url=http://10.120.100.207:8060/'
						}
					}
				}
				stage('test-test-component-department'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/serenity-rest-microservices-test.git'   
							sh 'mvn verify "-Dcucumber.options=--tags @department" -Dapp.base.url=http://10.120.100.207:8060/'
						}
					}
				}
				stage('test-serenity-bdd'){
					agent{
						docker{
							args '-v $HOME/.m2:/root/.m2'
							image 'maven:3-alpine'
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/serenity-rest-microservices-test.git'   
							sh 'mvn verify "-Dcucumber.options=--tags @department" -Dapp.base.url=http://10.120.100.207:8060/'
						}
					}
				}
			}
		}
		stage('test-serenity-bdd11'){
			parallel{
				stage('test-serenity-bdd-1'){
					agent{
						kubernetes {
							defaultContainer 'serenity-test'
							yaml """
spec:
  volumes:
  - name: volume-0
    persistentVolumeClaim: 
      claimName: task-pv-claim
      readOnly: false
  containers:
  - name: serenity-test
    image: maven:3-alpine
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    env: 
    - name: REPLICAS
      value: 2
    - name: REPLICA_ID
      value: 1
    volumeMounts: 
    - mountPath: /root/.m2/repository
      name: volume-0
      readOnly: false
"""
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/serenity-rest-microservices-test.git'   
							sh 'echo $PWD'		
							sh 'mvn verify "-Dcucumber.options=--tags @microservice-$REPLICA_ID" -Dapp.base.url=http://10.120.100.207:8060/'
							publishHTML target: [ allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: "./target/site/serenity/", reportFiles: "index.html", reportName: "SernityTestReport-${sh(script:'echo $REPLICA_ID-$REPLICAS', returnStdout: true).trim()}" ]
						}
					}
				}
				stage('test-serenity-bdd-2'){
					agent{
						kubernetes {
							defaultContainer 'serenity-test'
							yaml """
spec:
  volumes:
  - name: volume-0
    persistentVolumeClaim: 
      claimName: task-pv-claim
      readOnly: false
  containers:
  - name: serenity-test
    image: maven:3-alpine
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    env: 
    - name: REPLICAS
      value: 2
    - name: REPLICA_ID
      value: 2
    volumeMounts: 
    - mountPath: /root/.m2/repository
      name: volume-0
      readOnly: false
"""
						}
					}
					steps{
						script{
							git url: 'http://micro:micro_gitlab@10.120.100.207:8929/api-test/serenity-rest-microservices-test.git'   
							sh 'echo $PWD'		
							sh 'mvn verify "-Dcucumber.options=--tags @microservice-$REPLICA_ID" -Dapp.base.url=http://10.120.100.207:8060/'
							publishHTML target: [ allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: "./target/site/serenity/", reportFiles: "index.html", reportName: "SernityTestReport-${sh(script:'echo $REPLICA_ID-$REPLICAS', returnStdout: true).trim()}" ]
						}
					}
				}
			}
		}

	}
}